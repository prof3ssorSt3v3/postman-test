{
	"info": {
		"_postman_id": "14e30926-3103-4a5d-8cae-489fc7816ec9",
		"name": "API_movie_chain_test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get_Check_Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get check should Fail\", function() {",
							"    pm.response.to.have.status(401);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"error\": {\n    \"code\": 111,\n    \"message\": \"Not gonna do it.\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Check_PASS_(API_key_header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get check should Pass\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.environment.set(\"accessToken\", pm.response.json().token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "MyUniqueApiKey",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_CHECK_Register a USER",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let date = Date.now();",
							"let email = \"robert\" + date + \"@goesfast.ca\" ;",
							"pm.environment.set(\"usermail\", email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Created USER\", function() {",
							"    pm.response.to.have.status(201);",
							"    const {data} = pm.response.json();",
							"    pm.environment.set('newUser', data._id)",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\n//   \"email\": \"bubba@goesfast.ca\",\n//   \"password\": \"nascar123\"\n// }\n {\n   \"email\": \"{{usermail}}\",\n   \"password\": \"nascar123\"\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Check_Login and get a token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logged IN\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"got a token\" , function() {",
							"    const {data} = pm.response.json();",
							"    pm.environment.set(\"token\", data.token);",
							"    return \"token\" in data",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\n//   \"email\": \"bubba@goesfast.ca\",\n//   \"password\": \"nascar123\"\n// }\n\n{\n  \"email\": \"{{usermail}}\",\n  \"password\": \"nascar123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/tokens",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Movie USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Created Movie for NewUser\", function() {",
							"    pm.response.to.have.status(201);",
							"    const {data} = pm.response.json();",
							"    pm.environment.set('newMovieForNewUser', data._id)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n    {\n      \n        \"title\": \"Dester movie2 \",\n        \"year\": 3999,\n        \"owner\": {{newUser}}\n    }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Check_Add a new movie",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOjE1ODc5MTI2OTg5ODYsImlhdCI6MTU4NzkyMDIyOH0.E9oDnlXb4Bw6Kr4672BwNdav-51p_qOs58shQWrfkog",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Tester movie \",\n  \"year\": 2999\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Check list all movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all movies\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOjE1ODc5MTI2OTg5ODYsImlhdCI6MTU4NzkyMDIyOH0.E9oDnlXb4Bw6Kr4672BwNdav-51p_qOs58shQWrfkog",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Check a specific movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get specific movie\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer  {{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/movies/{{newMovieForNewUser}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"movies",
						"{{newMovieForNewUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL_CHECK_Delete movie",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": { \"_id\": 1587921293849 }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/movies/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"movies",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": null
						}
					]
				}
			},
			"response": []
		}
	]
}